@using DrawTogether.UI.Shared
<path d="@PathData(_points)" fill="None" stroke="@Stroke" stroke-width="@StrokeWidth"></path>

@code {
    private Point[] _points { get; set; } = new Point[0];

    [Parameter]
    public List<Point> Points { get; set; } = new List<Point>();

    [Parameter]
    public int StrokeWidth { get; set; } = 8;

    [Parameter]
    public string Stroke { get; set; } = "#ff0000";

    protected override bool ShouldRender()
    {
        if (_points.Length != Points.Count)
        {
            _points = Points.ToArray();
            return true;
        }
        return false;
    }

    protected static string PathData(Point[] Points)
    {
    // Parameter for smoothness of path in interval [0, 0.5]
        double smoothness = 1.0 / 3.0;

        var result = "";
        if (Points.Length >= 2)
        {
            result = $"M {Points[0].x} {Points[0].y} ";
            for (int i = 1; i < Points.Length - 1; i++)
            {
                result += $"S {Points[i - 1].x * smoothness / 2 + Points[i].x - Points[i + 1].x * smoothness / 2} {Points[i - 1].y * smoothness / 2 + Points[i].y - Points[i + 1].y * smoothness / 2} {Points[i].x} {Points[i].y} ";
            }
            result += $"S {Points[^2].x * smoothness + Points[^1].x * (1 - smoothness)} {Points[^2].y * smoothness + Points[^1].y * (1 - smoothness)} {Points[^1].x} {Points[^1].y} ";
        }
        return result;
    }
}